• Divergent Change en la clase Movimiento, los objetivos de un movimiento de extraccion y uno de deposito son independientes
• Primitive obsession en Cuenta y Movimiento
    ► Sol: Cambio todos los tipo de datos primitivos a su version de objetos.
• No es responsabilidad de Movimiento calcular el saldo luego de una operacion ya que esta informacion del saldo la tiene Cuenta
    ► La logica de sumar o restar del saldo ahora esta en Cuenta
    ► En consecuencia el metodo de calcularValor ya no es necesario
    ► El metodo de agregateA en Movimiento ya no llama a setSaldo ni a calcularValor
• Cuenta delega comportamiento a movimiento que no le corresponde por ejemplo el agregado de dichos movimientos
    ► La logica de agregar movimiento ahora esta exclusivamente en Cuenta
    ► En consecuencia el metodo agregateA en Movimiento ya no es necesario
• Repeticion de logica en Cuenta en los metodos poner y sacar
    ► Se delega la logica de validacion de operacion con valor negativo al metodo validarOperacionNegativa
• El metodo poner y el metodo sacar de Cuenta son Long Methods
    ► Se delega la logica de las validaciones a otros metodos fuera de poner
    ► Se delega la logica de las validaciones a otros metodos fuera de sacar